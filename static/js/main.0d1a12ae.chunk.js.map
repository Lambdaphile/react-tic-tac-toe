{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","slice","length","calculateWinner","setState","concat","moveLocation","locateMove","step","status","current","winner","isDraw","indexOf","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","console","log","ReactDOM","render","document","getElementById"],"mappings":"oNAKA,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAChBC,QAASF,EAAME,SACdF,EAAMG,O,IAKPC,E,qLACSC,GAAI,IAAD,OACd,OAAO,kBAACN,EAAD,CAAQI,MAAOG,KAAKN,MAAMO,QAAQF,GACvCH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAIpC,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GAtBTC,IAAMC,WA6BpBC,E,YACJ,WAAYX,GAAQ,IAAD,8BACjB,4CAAMA,KACDY,MAAQ,CACXC,QAAS,CAAC,CACRN,QAASO,MAAM,GAAGC,KAAK,QAEzBC,SAAS,EACTC,WAAY,GAPG,E,yEAWPZ,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMK,WAAa,GAE9DV,EADUM,EAAQA,EAAQM,OAAS,GACjBZ,QAAQW,QAE5BE,EAAgBb,IAAYA,EAAQF,KAIxCE,EAAQF,GAAKC,KAAKM,MAAMI,QAAU,IAAM,IACxCV,KAAKe,SAAS,CACZR,QAASA,EAAQS,OAAO,CAAC,CACvBf,QAASA,KAEXU,WAAYJ,EAAQM,OACpBH,SAAUV,KAAKM,MAAMI,QACrBO,aAAcC,EAAWnB,Q,6BAItBoB,GACLnB,KAAKe,SAAS,CACZJ,WAAYQ,EACZT,QAAUS,EAAO,IAAO,M,+BAIlB,IAmBJC,EAnBG,OACDb,EAAUP,KAAKM,MAAMC,QACrBc,EAAUd,EAAQP,KAAKM,MAAMK,YAI7BW,GAHIf,EAAQP,KAAKM,MAAMK,YACnBJ,EAAQP,KAAKM,MAAMK,WAAa,GAE3BG,EAAgBO,EAAQpB,UACjCsB,GAA6C,IAAnCF,EAAQpB,QAAQuB,QAAQ,MAClCC,EAAQlB,EAAQmB,IAAI,SAACP,EAAMQ,GAC/B,IAAMC,EAAOD,EACX,eAAiBA,EAAO,OAAS,EAAKrB,MAAMW,aAAgB,IAC5D,mBACF,OACE,wBAAIY,IAAKF,GACP,4BAAQ/B,QAAS,kBAAM,EAAKkC,OAAOH,KAAQC,MAcjD,OAPER,EADEE,EACO,WAAaA,EACbC,EACA,gBAEA,iBAAmBvB,KAAKM,MAAMI,QAAU,IAAM,KAIvD,yBAAKf,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACEG,QAASoB,EAAQpB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAKgC,YAAYhC,OAGrC,yBAAKJ,UAAU,aACb,6BAAMyB,GACN,4BAAKK,S,GA7EItB,IAAMC,WAoFzB,SAASU,EAAgBb,GAYvB,IAXA,IAAM+B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGAjC,EAAI,EAAGA,EAAIiC,EAAMnB,OAAQd,IAAK,CAAC,IAAD,cACnBiC,EAAMjC,GADa,GAC9BkC,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIlC,EAAQgC,IAAMhC,EAAQgC,KAAOhC,EAAQiC,IAAMjC,EAAQgC,KAAOhC,EAAQkC,GACpE,OAAOlC,EAAQgC,GAGnB,OAAO,KAGT,SAASf,EAAWnB,GAClB,OAAQA,GACN,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,QACEqC,QAAQC,IAAI,uCAMlBC,IAASC,OACP,kBAAClC,EAAD,MACAmC,SAASC,eAAe,U","file":"static/js/main.0d1a12ae.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { type } from 'os';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\"\n      onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return <Square value={this.props.squares[i]}\n      onClick={() => this.props.onClick(i)} />;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true,\n      stepNumber: 0\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n      moveLocation: locateMove(i)\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const a = history[this.state.stepNumber];\n    const b = history[this.state.stepNumber - 1];\n\n    const winner = calculateWinner(current.squares);\n    const isDraw = (current.squares.indexOf(null) === -1) ? true : false;\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move + ' - (' + this.state.moveLocation  + ')':\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else if (isDraw) {\n      status = 'Result: Draw!';\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nfunction locateMove(i) {\n  switch (i) {\n    case 0:\n      return 'col 1, row 1';\n    case 1:\n      return 'col 2, row 1';\n    case 2:\n      return 'col 3, row 1';\n    case 3:\n      return 'col 1, row 2';\n    case 4:\n      return 'col 2, row 2';\n    case 5:\n      return 'col 3, row 2';\n    case 6:\n      return 'col 1, row 3';\n    case 7:\n      return 'col 2, row 3';\n    case 8:\n      return 'col 3, row 3';\n    default:\n      console.log('What are you?! This is impossible!'); // ...xD\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}