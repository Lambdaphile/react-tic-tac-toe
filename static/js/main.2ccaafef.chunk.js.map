{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","row","j","push","renderSquare","board","buildRow","renderBoard","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","order","slice","length","calculateWinner","setState","concat","step","moves","reversed","from","reverse","status","current","winner","isDraw","indexOf","map","move","desc","console","log","locateMove","key","jumpTo","handleClick","toggleOrder","renderMoves","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"8MAIA,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAChBC,QAASF,EAAME,SACdF,EAAMG,O,IAKPC,E,qLACSC,GAAI,IAAD,OACd,OAAO,kBAACN,EAAD,CAAQI,MAAOG,KAAKN,MAAMO,QAAQF,GACvCH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAG7BA,GAEP,IADA,IAAMG,EAAM,GACHC,EAAIJ,EAAGI,EAAKJ,EAAI,EAAII,IAC3BD,EAAIE,KAAKJ,KAAKK,aAAaF,IAE7B,OAAOD,I,oCAKP,IADA,IAAMI,EAAQ,GACLP,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BO,EAAMF,KAAK,yBAAKT,UAAU,aAAaK,KAAKO,SAASR,KAEvD,OAAOO,I,+BAIP,OACE,6BACGN,KAAKQ,mB,GAzBMC,IAAMC,WA+BpBC,E,YACJ,WAAYjB,GAAQ,IAAD,8BACjB,4CAAMA,KACDkB,MAAQ,CACXC,QAAS,CAAC,CACRZ,QAASa,MAAM,GAAGC,KAAK,QAEzBC,SAAS,EACTC,WAAY,EACZC,MAAO,aARQ,E,yEAYPnB,GACV,IAAMc,EAAUb,KAAKY,MAAMC,QAAQM,MAAM,EAAGnB,KAAKY,MAAMK,WAAa,GAE9DhB,EADUY,EAAQA,EAAQO,OAAS,GACjBnB,QAAQkB,QAE5BE,EAAgBpB,IAAYA,EAAQF,KAIxCE,EAAQF,GAAKC,KAAKY,MAAMI,QAAU,IAAM,IACxChB,KAAKsB,SAAS,CACZT,QAASA,EAAQU,OAAO,CAAC,CACvBtB,QAASA,KAEXgB,WAAYJ,EAAQO,OACpBJ,SAAUhB,KAAKY,MAAMI,a,6BAIlBQ,GACLxB,KAAKsB,SAAS,CACZL,WAAYO,EACZR,QAAUQ,EAAO,IAAO,M,oCAKD,cAArBxB,KAAKY,MAAMM,MACblB,KAAKsB,SAAS,CAAEJ,MAAO,eAEvBlB,KAAKsB,SAAS,CAAEJ,MAAO,gB,kCAGfO,GACV,MAAyB,cAArBzB,KAAKY,MAAMM,MACN,4BAAKO,GAEP,wBAAIC,UAAQ,GAAEZ,MAAMa,KAAKF,GAAOG,a,+BAG/B,IAoBJC,EApBG,OACDhB,EAAUb,KAAKY,MAAMC,QACrBiB,EAAUjB,EAAQb,KAAKY,MAAMK,YAE7Bc,EAASV,EAAgBS,EAAQ7B,SACjC+B,GAA6C,IAAnCF,EAAQ7B,QAAQgC,QAAQ,MAEpCR,EAAQZ,EAAQqB,IAAI,SAACV,EAAMW,GAC7B,IAAMC,EAAOD,EACX,eAAiBA,EAAO,OAgEhC,SAAoBpC,GAClB,OAAQA,GACN,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,QACEsC,QAAQC,IAAI,uCArFuBC,CAAWJ,EAAO,GAAM,IACzD,mBACA,OACE,wBAAIK,IAAKL,GACT,4BAAQvC,QAAS,kBAAM,EAAK6C,OAAON,KAChCA,IAAS,EAAKvB,MAAMK,WAAa,2BAAImB,GAAYA,MAe1D,OAPEP,EADEE,EACO,WAAaA,EACbC,EACA,gBAEA,iBAAmBhC,KAAKY,MAAMI,QAAU,IAAM,KAIvD,yBAAKrB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACEG,QAAS6B,EAAQ7B,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAK2C,YAAY3C,OAGrC,yBAAKJ,UAAU,aACb,6BAAMkC,GACN,4BACElC,UAAU,eACVC,QAAS,kBAAM,EAAK+C,YAAYlB,KAFlC,gBAMCzB,KAAK4C,YAAYnB,S,GAlGThB,IAAMC,WAyGzB,SAASW,EAAgBpB,GAYvB,IAXA,IAAM4C,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGA9C,EAAI,EAAGA,EAAI8C,EAAMzB,OAAQrB,IAAK,CAAC,IAAD,cACnB8C,EAAM9C,GADa,GAC9B+C,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI/C,EAAQ6C,IAAM7C,EAAQ6C,KAAO7C,EAAQ8C,IAAM9C,EAAQ6C,KAAO7C,EAAQ+C,GACpE,OAAO/C,EAAQ6C,GAGnB,OAAO,KA8BTG,IAASC,OACP,kBAACvC,EAAD,MACAwC,SAASC,eAAe,U","file":"static/js/main.2ccaafef.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\"\n      onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return <Square value={this.props.squares[i]}\n      onClick={() => this.props.onClick(i)} />;\n  }\n\n  buildRow(i) {\n    const row = [];\n    for (let j = i; j < (i + 3); j++) {\n      row.push(this.renderSquare(j));\n    }\n    return row;\n  }\n\n  renderBoard() {\n    const board = [];\n    for (let i = 0; i < 9; i += 3) {\n      board.push(<div className=\"board-row\">{this.buildRow(i)}</div>);\n    }\n    return board;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderBoard()}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true,\n      stepNumber: 0,\n      order: 'ascending'\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  }\n\n  toggleOrder() {\n    if (this.state.order === 'ascending')\n      this.setState({ order: 'descending' });\n    else \n      this.setState({ order: 'ascending'});\n  }\n\n  renderMoves(moves) {\n    if (this.state.order === 'ascending') {\n      return <ol>{moves}</ol>\n    }\n    return <ol reversed>{Array.from(moves).reverse()}</ol>\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n\n    const winner = calculateWinner(current.squares);\n    const isDraw = (current.squares.indexOf(null) === -1) ? true : false;\n\n    let moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move + ' - (' + locateMove(move - 1)  + ')':\n        'Go to game start';\n        return (\n          <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>\n            {move === this.state.stepNumber ? <b>{desc}</b> : desc}\n          </button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else if (isDraw) {\n      status = 'Result: Draw!';\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <button\n            className=\"toggle-order\"\n            onClick={() => this.toggleOrder(moves)}\n          >\n            Toggle Order\n          </button>\n          {this.renderMoves(moves)}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nfunction locateMove(i) {\n  switch (i) {\n    case 0:\n      return 'col 1, row 1';\n    case 1:\n      return 'col 2, row 1';\n    case 2:\n      return 'col 3, row 1';\n    case 3:\n      return 'col 1, row 2';\n    case 4:\n      return 'col 2, row 2';\n    case 5:\n      return 'col 3, row 2';\n    case 6:\n      return 'col 1, row 3';\n    case 7:\n      return 'col 2, row 3';\n    case 8:\n      return 'col 3, row 3';\n    default:\n      console.log('What are you?! This is impossible!'); // ...xD\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}