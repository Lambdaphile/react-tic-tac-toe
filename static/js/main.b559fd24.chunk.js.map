{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","this","winPosition","squares","row","j","push","renderSquare","board","buildRow","renderBoard","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","order","moveLocation","slice","length","calculateWinner","setState","concat","locateMove","step","moves","reversed","from","reverse","status","current","winInfo","isDraw","indexOf","map","move","desc","key","jumpTo","winner","positions","handleClick","toggleOrder","renderMoves","lines","a","b","c","console","log","ReactDOM","render","document","getElementById"],"mappings":"6NAEe,SAASA,EAAOC,GAC7B,OACE,4BACEC,UAAWD,EAAMC,UACjBC,QAASF,EAAME,SACdF,EAAMG,O,ICJQC,E,qLACNC,GAAI,IACXJ,EADU,OAOd,OAHqCA,EADjCK,KAAKN,MAAMO,YAAY,KAAOF,GAAKC,KAAKN,MAAMO,YAAY,KAAOF,GACjEC,KAAKN,MAAMO,YAAY,KAAOF,EAAe,gBAChC,SAEV,kBAACN,EAAD,CACEE,UAAWA,EACXE,MAAOG,KAAKN,MAAMQ,QAAQH,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAIpCA,GAEP,IADA,IAAMI,EAAM,GACHC,EAAIL,EAAGK,EAAKL,EAAI,EAAIK,IAC3BD,EAAIE,KAAKL,KAAKM,aAAaF,IAE7B,OAAOD,I,oCAKP,IADA,IAAMI,EAAQ,GACLR,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BQ,EAAMF,KAAK,yBAAKV,UAAU,aAAaK,KAAKQ,SAAST,KAEvD,OAAOQ,I,+BAIP,OACE,6BACGP,KAAKS,mB,GAlCqBC,IAAMC,WCApBC,E,YACnB,WAAYlB,GAAQ,IAAD,8BACjB,4CAAMA,KACDmB,MAAQ,CACXC,QAAS,CAAC,CACRZ,QAASa,MAAM,GAAGC,KAAK,QAEzBC,SAAS,EACTC,WAAY,EACZC,MAAO,YACPC,aAAc,IATC,E,yEAaPrB,GACV,IAAMe,EAAUd,KAAKa,MAAMC,QAAQO,MAAM,EAAGrB,KAAKa,MAAMK,WAAa,GAE9DhB,EADUY,EAAQA,EAAQQ,OAAS,GACjBpB,QAAQmB,QAE5BE,EAAgBrB,IAAYA,EAAQH,KAIxCG,EAAQH,GAAKC,KAAKa,MAAMI,QAAU,IAAM,IACxCjB,KAAKwB,SAAS,CACZV,QAASA,EAAQW,OAAO,CAAC,CACvBvB,QAASA,KAEXe,SAAUjB,KAAKa,MAAMI,QACrBC,WAAYJ,EAAQQ,OACpBF,aAAcpB,KAAKa,MAAMO,aAAaK,OAAOC,EAAW3B,S,6BAIrD4B,GACL3B,KAAKwB,SAAS,CACZN,WAAYS,EACZV,QAAUU,EAAO,IAAO,M,oCAKD,cAArB3B,KAAKa,MAAMM,MACbnB,KAAKwB,SAAS,CAAEL,MAAO,eAEvBnB,KAAKwB,SAAS,CAAEL,MAAO,gB,kCAGfS,GACV,MAAyB,cAArB5B,KAAKa,MAAMM,MACN,4BAAKS,GAEP,wBAAIC,UAAQ,GAAEd,MAAMe,KAAKF,GAAOG,a,+BAG/B,IAqBJC,EArBG,OACDlB,EAAUd,KAAKa,MAAMC,QACrBmB,EAAUnB,EAAQd,KAAKa,MAAMK,YAE7BgB,EAAUX,EAAgBU,EAAQ/B,SAClCiC,GAA6C,IAAnCF,EAAQ/B,QAAQkC,QAAQ,MAEpCR,EAAQd,EAAQuB,IAAI,SAACV,EAAMW,GAC7B,IAAMC,EAAOD,EACX,eAAiBA,EAAO,KAAO,EAAKzB,MAAMO,aAAakB,EAAK,GAAK,IACjE,mBACA,OACE,wBAAIE,IAAKF,GACT,4BAAQ1C,QAAS,kBAAM,EAAK6C,OAAOH,KAChCA,IAAS,EAAKzB,MAAMK,WAAa,2BAAIqB,GAAYA,MAMtDtC,EAAc,CAAC,GAAI,GAAI,IAW3B,OATIiC,GACFF,EAAS,WAAaE,EAAQQ,OAC9BzC,EAAciC,EAAQS,WAEtBX,EADSG,EACA,QAEA,iBAAmBnC,KAAKa,MAAMI,QAAU,IAAM,KAIvD,yBAAKtB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CACEO,QAAS+B,EAAQ/B,QACjBN,QAAS,SAACG,GAAD,OAAO,EAAK6C,YAAY7C,IACjCE,YAAaA,KAGjB,yBAAKN,UAAU,aACb,6BAAMqC,GACN,4BACErC,UAAU,eACVC,QAAS,kBAAM,EAAKiD,YAAYjB,KAFlC,gBAKC5B,KAAK8C,YAAYlB,S,GAtGMlB,IAAMC,WA6GxC,SAASY,EAAgBrB,GAYvB,IAXA,IAAM6C,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGAhD,EAAI,EAAGA,EAAIgD,EAAMzB,OAAQvB,IAAK,CAAC,IAAD,cACnBgD,EAAMhD,GADa,GAC9BiD,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIhD,EAAQ8C,IAAM9C,EAAQ8C,KAAO9C,EAAQ+C,IAAM/C,EAAQ8C,KAAO9C,EAAQgD,GAEpE,MAAO,CAAER,OAAQxC,EAAQ8C,GAAIL,UAAW,CAACK,EAAGC,EAAGC,IAGnD,OAAO,KAGT,SAASxB,EAAW3B,GAClB,OAAQA,GACN,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eACT,QACEoD,QAAQC,IAAI,uC,MCtJlBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b559fd24.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Square(props) {\n  return (\n    <button\n      className={props.className}\n      onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n","import React from 'react';\nimport Square from './Square';\n\nexport default class Board extends React.Component {\n  renderSquare(i) {\n    let className;\n\n    if (this.props.winPosition[0] === i || this.props.winPosition[1] === i || \n        this.props.winPosition[2] === i) className = 'square winner';\n    else className = 'square';\n\n    return <Square \n             className={className}\n             value={this.props.squares[i]}\n             onClick={() => this.props.onClick(i)}\n           />;\n  }\n\n  buildRow(i) {\n    const row = [];\n    for (let j = i; j < (i + 3); j++) {\n      row.push(this.renderSquare(j));\n    }\n    return row;\n  }\n\n  renderBoard() {\n    const board = [];\n    for (let i = 0; i < 9; i += 3) {\n      board.push(<div className=\"board-row\">{this.buildRow(i)}</div>);\n    }\n    return board;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderBoard()}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Board from './Board';\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true,\n      stepNumber: 0,\n      order: 'ascending',\n      moveLocation: []\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length,\n      moveLocation: this.state.moveLocation.concat(locateMove(i))\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  }\n\n  toggleOrder() {\n    if (this.state.order === 'ascending')\n      this.setState({ order: 'descending' });\n    else \n      this.setState({ order: 'ascending'});\n  }\n\n  renderMoves(moves) {\n    if (this.state.order === 'ascending')\n      return <ol>{moves}</ol>;\n\n    return <ol reversed>{Array.from(moves).reverse()}</ol>;\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n\n    const winInfo = calculateWinner(current.squares);\n    const isDraw = (current.squares.indexOf(null) === -1) ? true : false;\n\n    let moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move + ' (' + this.state.moveLocation[move-1] + ')':\n        'Go to game start';\n        return (\n          <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>\n            {move === this.state.stepNumber ? <b>{desc}</b> : desc}\n          </button>\n        </li>\n      );\n    });\n\n    let winPosition = ['', '', ''];\n    let status;\n    if (winInfo) {\n      status = 'WINNER: ' + winInfo.winner;\n      winPosition = winInfo.positions;\n    } else if (isDraw) {\n      status = 'DRAW!';\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n            winPosition={winPosition}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <button\n            className=\"toggle-order\"\n            onClick={() => this.toggleOrder(moves)}\n          >Toggle Order\n          </button>\n          {this.renderMoves(moves)}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n     \n      return { winner: squares[a], positions: [a, b, c] };\n    }\n  }\n  return null;\n}\n\nfunction locateMove(i) {\n  switch (i) {\n    case 0:\n      return 'col 1, row 1';\n    case 1:\n      return 'col 2, row 1';\n    case 2:\n      return 'col 3, row 1';\n    case 3:\n      return 'col 1, row 2';\n    case 4:\n      return 'col 2, row 2';\n    case 5:\n      return 'col 3, row 2';\n    case 6:\n      return 'col 1, row 3';\n    case 7:\n      return 'col 2, row 3';\n    case 8:\n      return 'col 3, row 3';\n    default:\n      console.log('What are you?! This is impossible!'); // ...xD\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/Game';\nimport './index.css';\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}