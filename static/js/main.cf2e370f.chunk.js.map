{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","index.js"],"names":["Square","props","className","winner","onClick","value","Board","i","this","winner1","winner2","winner3","squares","row","j","push","renderSquare","board","buildRow","renderBoard","React","Component","Game","state","history","Array","fill","order","stepNumber","xIsNext","moveLocation","slice","length","calculateWinner","currentLocation","setState","concat","locateMove","step","moves","reversed","from","reverse","status","current","isDraw","indexOf","map","move","desc","key","jumpTo","w1","w2","w3","handleClick","toggleOrder","renderMoves","lines","a","b","c","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf2e370f.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Square(props) {\n  return (\n    <button\n      className={props.winner}\n      onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n","import React from 'react';\nimport Square from './Square';\n\nexport default class Board extends React.Component {\n  renderSquare(i) {\n    let winner = 'square'\n    if (this.props.winner1 === i || this.props.winner2 === i|| this.props.winner3 === i) {\n      winner = 'square winner';\n    }\n    return <Square \n             winner={winner}\n             value={this.props.squares[i]}\n             onClick={() => this.props.onClick(i)}\n           />;\n  }\n\n  buildRow(i) {\n    const row = [];\n    for (let j = i; j < (i + 3); j++) {\n      row.push(this.renderSquare(j));\n    }\n    return row;\n  }\n\n  renderBoard() {\n    const board = [];\n    for (let i = 0; i < 9; i += 3) {\n      board.push(<div className=\"board-row\">{this.buildRow(i)}</div>);\n    }\n    return board;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderBoard()}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Board from './Board';\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      order: 'ascending',\n      stepNumber: 0,\n      xIsNext: true,\n      moveLocation: []\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n\n    const currentLocation = this.state.moveLocation.slice();\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n      moveLocation: currentLocation.concat(locateMove(i))\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  }\n\n  toggleOrder() {\n    if (this.state.order === 'ascending')\n      this.setState({ order: 'descending' });\n    else \n      this.setState({ order: 'ascending'});\n  }\n\n  renderMoves(moves) {\n    if (this.state.order === 'ascending') {\n      return <ol>{moves}</ol>\n    }\n    return <ol reversed>{Array.from(moves).reverse()}</ol>\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n\n    const winner = calculateWinner(current.squares);\n    const isDraw = (current.squares.indexOf(null) === -1) ? true : false;\n\n    let moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move + ' (' + this.state.moveLocation[move-1] + ')':\n        'Go to game start';\n        return (\n          <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>\n            {move === this.state.stepNumber ? <b>{desc}</b> : desc}\n          </button>\n        </li>\n      );\n    });\n\n    let w1 = '', w2 = '', w3 = '';\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner[0];\n      w1 = winner[1];\n      w2 = winner[2];\n      w3 = winner[3];\n    } else if (isDraw) {\n      status = 'Result: Draw!';\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n\n            winner1={w1}\n            winner2={w2}\n            winner3={w3}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <button\n            className=\"toggle-order\"\n            onClick={() => this.toggleOrder(moves)}\n          >Toggle Order\n          </button>\n          {this.renderMoves(moves)}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n     \n      return [squares[a], a, b, c];\n    }\n  }\n  return null;\n}\n\nfunction locateMove(i) {\n  switch (i) {\n    case 0:\n      return 'col 1, row 1';\n    case 1:\n      return 'col 2, row 1';\n    case 2:\n      return 'col 3, row 1';\n    case 3:\n      return 'col 1, row 2';\n    case 4:\n      return 'col 2, row 2';\n    case 5:\n      return 'col 3, row 2';\n    case 6:\n      return 'col 1, row 3';\n    case 7:\n      return 'col 2, row 3';\n    case 8:\n      return 'col 3, row 3';\n    default:\n      console.log('What are you?! This is impossible!'); // ...xD\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/Game';\nimport './index.css';\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}